#!/bin/bash

echo "üîß Script de Troubleshooting - Workshop N8N + EvolutionAPI"
echo "=========================================================="

# Fun√ß√£o para verificar se uma imagem Docker existe
check_image() {
    echo "üîç Verificando imagem: $1"
    if docker pull $1 >/dev/null 2>&1; then
        echo "‚úÖ Imagem $1 encontrada e baixada"
        return 0
    else
        echo "‚ùå Erro ao baixar imagem $1"
        return 1
    fi
}

# Fun√ß√£o para testar conectividade
test_connectivity() {
    echo "üåê Testando conectividade..."
    if curl -s --max-time 5 https://hub.docker.com >/dev/null; then
        echo "‚úÖ Conectividade com Docker Hub OK"
        return 0
    else
        echo "‚ùå Problemas de conectividade com Docker Hub"
        return 1
    fi
}

# Parar servi√ßos existentes
echo "üõë Parando servi√ßos existentes..."
docker-compose down 2>/dev/null || true

# Testar conectividade
test_connectivity

# Verificar imagens principais
echo ""
echo "üì¶ Verificando disponibilidade das imagens Docker..."

if check_image "n8nio/n8n:latest"; then
    N8N_OK=true
else
    N8N_OK=false
fi

if check_image "atendai/evolution-api:latest"; then
    EVOLUTION_OK=true
else
    EVOLUTION_OK=false
fi

if check_image "postgres:15"; then
    POSTGRES_OK=true
else
    POSTGRES_OK=false
fi

# Determinar qual configura√ß√£o usar
echo ""
echo "üéØ Determinando melhor configura√ß√£o..."

if [ "$N8N_OK" = true ] && [ "$EVOLUTION_OK" = true ] && [ "$POSTGRES_OK" = true ]; then
    echo "‚úÖ Todas as imagens est√£o dispon√≠veis - usando configura√ß√£o completa"
    COMPOSE_FILE="docker-compose.yml"
elif [ "$N8N_OK" = true ] && [ "$POSTGRES_OK" = true ]; then
    echo "‚ö†Ô∏è  EvolutionAPI n√£o dispon√≠vel - usando configura√ß√£o simplificada"
    COMPOSE_FILE="docker-compose.simple.yml"
else
    echo "‚ùå Imagens essenciais n√£o dispon√≠veis - verificar conectividade"
    exit 1
fi

# Iniciar servi√ßos
echo ""
echo "üöÄ Iniciando servi√ßos com $COMPOSE_FILE..."
docker-compose -f $COMPOSE_FILE up -d

# Aguardar servi√ßos
echo "‚è≥ Aguardando servi√ßos ficarem prontos..."
sleep 30

# Verificar status
echo ""
echo "üìä Status dos servi√ßos:"
docker-compose -f $COMPOSE_FILE ps

# Testar endpoints
echo ""
echo "üîç Testando endpoints..."

# Testar N8N
if curl -s --max-time 10 http://localhost:5678 >/dev/null; then
    echo "‚úÖ N8N est√° respondendo em http://localhost:5678"
else
    echo "‚ùå N8N n√£o est√° respondendo"
fi

# Testar EvolutionAPI (se estiver rodando)
if [ "$COMPOSE_FILE" = "docker-compose.yml" ]; then
    if curl -s --max-time 10 http://localhost:8080 >/dev/null; then
        echo "‚úÖ EvolutionAPI est√° respondendo em http://localhost:8080"
    else
        echo "‚ùå EvolutionAPI n√£o est√° respondendo"
    fi
fi

echo ""
echo "üéâ Configura√ß√£o conclu√≠da!"
echo ""
echo "üåê Acessos dispon√≠veis:"
echo "  ‚Ä¢ N8N: http://localhost:5678"
if [ "$COMPOSE_FILE" = "docker-compose.yml" ]; then
    echo "  ‚Ä¢ EvolutionAPI: http://localhost:8080"
    echo "  ‚Ä¢ EvolutionAPI Manager: http://localhost:8081"
else
    echo "  ‚Ä¢ Webhook Tester: http://localhost:8080 (simulador)"
fi
echo ""
echo "üîë Credenciais N8N:"
echo "  ‚Ä¢ Email: admin@workshop.com"
echo "  ‚Ä¢ Senha: workshop123"
