#!/bin/bash

echo "ÔøΩ Script de Configura√ß√£o - Workshop N8N + EvolutionAPI"
echo "========================================================"
echo "‚ö†Ô∏è  AMBOS N8N E EVOLUTIONAPI S√ÉO OBRIGAT√ìRIOS!"
echo ""

# Fun√ß√£o para verificar se uma imagem Docker existe
check_image() {
    echo "üîç Verificando imagem: $1"
    if docker pull $1 >/dev/null 2>&1; then
        echo "‚úÖ Imagem $1 encontrada e baixada"
        return 0
    else
        echo "‚ùå ERRO: N√£o foi poss√≠vel baixar a imagem $1"
        return 1
    fi
}

# Fun√ß√£o para testar conectividade
test_connectivity() {
    echo "üåê Testando conectividade..."
    if curl -s --max-time 5 https://hub.docker.com >/dev/null; then
        echo "‚úÖ Conectividade com Docker Hub OK"
        return 0
    else
        echo "‚ùå ERRO: Problemas de conectividade com Docker Hub"
        return 1
    fi
}

# Parar servi√ßos existentes
echo "üõë Parando servi√ßos existentes..."
docker-compose down 2>/dev/null || true

# Testar conectividade
if ! test_connectivity; then
    echo ""
    echo "‚ùå FALHA CR√çTICA: Sem conectividade com Docker Hub"
    echo "üìû SOLICITE AJUDA AO INSTRUTOR!"
    exit 1
fi

# Verificar imagens OBRIGAT√ìRIAS
echo ""
echo "üì¶ Verificando TODAS as imagens obrigat√≥rias..."

IMAGES_OK=true

if ! check_image "n8nio/n8n:latest"; then
    IMAGES_OK=false
fi

if ! check_image "atendai/evolution-api:latest"; then
    echo "‚ö†Ô∏è  Tentando imagem alternativa da EvolutionAPI..."
    if ! check_image "evoapicloud/evolution-api:latest"; then
        IMAGES_OK=false
    else
        echo "üîÑ Atualizando docker-compose para usar imagem alternativa..."
        sed -i 's/atendai\/evolution-api:latest/evoapicloud\/evolution-api:latest/g' docker-compose.yml
    fi
fi

if ! check_image "postgres:15"; then
    IMAGES_OK=false
fi

if ! check_image "redis:7-alpine"; then
    IMAGES_OK=false
fi

# Verificar se todas as imagens est√£o OK
if [ "$IMAGES_OK" != true ]; then
    echo ""
    echo "‚ùå FALHA CR√çTICA: Imagens obrigat√≥rias n√£o dispon√≠veis"
    echo "üîß Poss√≠veis solu√ß√µes:"
    echo "   1. Verificar conectividade com internet"
    echo "   2. Aguardar alguns minutos e tentar novamente"
    echo "   3. Solicitar ajuda ao instrutor"
    echo ""
    echo "üìû SOLICITE AJUDA AO INSTRUTOR!"
    exit 1
fi

echo ""
echo "‚úÖ Todas as imagens obrigat√≥rias est√£o dispon√≠veis!"

# Iniciar servi√ßos
echo ""
echo "üöÄ Iniciando TODOS os servi√ßos obrigat√≥rios..."
docker-compose up -d

# Aguardar servi√ßos
echo "‚è≥ Aguardando servi√ßos ficarem prontos..."
sleep 45

# Verificar status
echo ""
echo "üìä Status dos servi√ßos:"
docker-compose ps

# Testar endpoints OBRIGAT√ìRIOS
echo ""
echo "üîç Testando endpoints obrigat√≥rios..."

# Testar N8N
echo "üß™ Testando N8N..."
for i in {1..10}; do
    if curl -s --max-time 10 http://localhost:5678 >/dev/null; then
        echo "‚úÖ N8N est√° funcionando em http://localhost:5678"
        N8N_OK=true
        break
    else
        echo "‚è≥ Tentativa $i/10 - N8N ainda n√£o dispon√≠vel..."
        sleep 5
    fi
done

# Testar EvolutionAPI
echo "üß™ Testando EvolutionAPI..."
for i in {1..10}; do
    if curl -s --max-time 10 http://localhost:8080 >/dev/null; then
        echo "‚úÖ EvolutionAPI est√° funcionando em http://localhost:8080"
        EVOLUTION_OK=true
        break
    else
        echo "‚è≥ Tentativa $i/10 - EvolutionAPI ainda n√£o dispon√≠vel..."
        sleep 5
    fi
done

# Verificar se AMBOS est√£o funcionando
if [ "$N8N_OK" != true ] || [ "$EVOLUTION_OK" != true ]; then
    echo ""
    echo "‚ùå FALHA CR√çTICA: Servi√ßos obrigat√≥rios n√£o est√£o funcionando"
    echo ""
    echo "üîç Logs para diagn√≥stico:"
    echo "--- N8N ---"
    docker-compose logs --tail=10 n8n
    echo "--- EvolutionAPI ---"
    docker-compose logs --tail=10 evolution-api
    echo ""
    echo "üìû SOLICITE AJUDA AO INSTRUTOR!"
    exit 1
fi

echo ""
echo "üéâ CONFIGURA√á√ÉO COMPLETA E FUNCIONANDO!"
echo ""
echo "üåê Acessos dispon√≠veis:"
echo "  ‚Ä¢ N8N: http://localhost:5678"
echo "  ‚Ä¢ EvolutionAPI: http://localhost:8080"
echo "  ‚Ä¢ EvolutionAPI Manager: http://localhost:8081"
echo ""
echo "üîë Credenciais N8N:"
echo "  ‚Ä¢ Email: admin@workshop.com"
echo "  ‚Ä¢ Senha: workshop123"
echo ""
echo "üîë EvolutionAPI:"
echo "  ‚Ä¢ API Key: workshop-evolution-key"
echo "  ‚Ä¢ Global API Key: global-workshop-key"
