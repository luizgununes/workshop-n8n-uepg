version: '3.8'

services:
  # Workspace container para o Codespace
  workspace:
    image: mcr.microsoft.com/devcontainers/universal:2
    command: sleep infinity
    volumes:
      - ../..:/workspaces:cached
    environment:
      - SHELL=/bin/zsh
    networks:
      - workshop-network

  # PostgreSQL para N8N
  postgres:
    image: postgres:15
    restart: unless-stopped
    environment:
      POSTGRES_DB: n8n
      POSTGRES_USER: n8n
      POSTGRES_PASSWORD: n8n
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - workshop-network
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -h localhost -U n8n']
      interval: 5s
      timeout: 5s
      retries: 10

  # Redis para cache e sessões
  redis:
    image: redis:7-alpine
    restart: unless-stopped
    volumes:
      - redis_data:/data
    networks:
      - workshop-network

  # N8N
  n8n:
    image: n8nio/n8n:latest
    restart: unless-stopped
    ports:
      - "5678:5678"
    environment:
      - N8N_HOST=0.0.0.0
      - N8N_PORT=5678
      - N8N_PROTOCOL=http
      - NODE_ENV=production
      - WEBHOOK_URL=http://localhost:5678/
      - GENERIC_TIMEZONE=America/Sao_Paulo
      
      # Configurações do banco
      - DB_TYPE=postgresdb
      - DB_POSTGRESDB_HOST=postgres
      - DB_POSTGRESDB_PORT=5432
      - DB_POSTGRESDB_DATABASE=n8n
      - DB_POSTGRESDB_USER=n8n
      - DB_POSTGRESDB_PASSWORD=n8n
      
      # Usuário padrão
      - N8N_USER_MANAGEMENT_DISABLED=false
      - N8N_OWNER_EMAIL=admin@workshop.com
      - N8N_OWNER_PASSWORD=workshop123
      
      # Configurações de segurança para workshop
      - N8N_SECURE_COOKIE=false
      - N8N_USER_MANAGEMENT_JWT_SECRET=workshop-jwt-secret
      
      # Configurações de execução
      - EXECUTIONS_TIMEOUT=3600
      - EXECUTIONS_TIMEOUT_MAX=7200
      
    volumes:
      - n8n_data:/home/node/.n8n
      - ./n8n/workflows:/home/node/.n8n/workflows
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - workshop-network

  # EvolutionAPI usando a imagem oficial mais recente
  evolution-api:
    image: evolution-api/evolution-api:latest
    restart: unless-stopped
    ports:
      - "8080:8080"
    environment:
      # Configurações básicas
      - PORT=8080
      - BASE_URL=http://localhost:8080
      
      # Configurações do banco
      - DATABASE_ENABLED=true
      - DATABASE_CONNECTION_URI=postgresql://evolution:evolution@postgres-evolution:5432/evolution
      
      # Configurações Redis  
      - REDIS_ENABLED=true
      - REDIS_URI=redis://redis-evolution:6379
      
      # Configurações de autenticação
      - AUTHENTICATION_TYPE=apikey
      - AUTHENTICATION_API_KEY=workshop-evolution-key
      - AUTHENTICATION_EXPOSE_IN_FETCH_INSTANCES=true
      - AUTHENTICATION_GLOBAL_AUTH_TOKEN=global-workshop-key
      
      # Configurações de webhook
      - WEBHOOK_GLOBAL_ENABLED=true
      - WEBHOOK_GLOBAL_URL=http://localhost:5678/webhook/evolution
      - WEBHOOK_GLOBAL_WEBHOOK_BY_EVENTS=true
      
      # Configurações do WhatsApp
      - CONFIG_SESSION_PHONE_CLIENT=EvolutionAPI
      - CONFIG_SESSION_PHONE_NAME=Chrome
      
      # Configurações de log
      - LOG_LEVEL=ERROR
      - LOG_COLOR=true
      
    volumes:
      - evolution_instances:/evolution/instances
      - evolution_store:/evolution/store
    depends_on:
      - postgres-evolution
      - redis-evolution
    networks:
      - workshop-network

  # PostgreSQL para EvolutionAPI
  postgres-evolution:
    image: postgres:15
    restart: unless-stopped
    environment:
      POSTGRES_DB: evolution
      POSTGRES_USER: evolution
      POSTGRES_PASSWORD: evolution
    volumes:
      - postgres_evolution_data:/var/lib/postgresql/data
    networks:
      - workshop-network

  # Redis para EvolutionAPI
  redis-evolution:
    image: redis:7-alpine
    restart: unless-stopped
    volumes:
      - redis_evolution_data:/data
    networks:
      - workshop-network

volumes:
  postgres_data:
  postgres_evolution_data:
  redis_data:
  redis_evolution_data:
  n8n_data:
  evolution_instances:
  evolution_store:

networks:
  workshop-network:
    driver: bridge
